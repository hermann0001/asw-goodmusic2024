# docker-compose.yml
networks:
  goodmusic-network:
    driver: bridge
    name: goodmusic-network

volumes:
  recensioni-db-data:
  connessioni-db-data:
  recensioni-seguite-db-data:
  kafka_data:

services:
  # Service discovery
  consul:
    image: hashicorp/consul
    container_name: asw-consul
    hostname: localhost
    networks:
      - goodmusic-network
    ports:
      - "8500:8500"
    command: "agent -dev -client=0.0.0.0"

  kafka:
    image: docker.io/bitnami/kafka:3.8
    container_name: kafka
    networks:
      - goodmusic-network
    # lasciamo la porta aperta sull'host per consentire la creazione dei topic
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Other settings 
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=4

  # PostgreSQL Databases
  db-recensioni:
    image: postgres:latest
    container_name: db-recensioni
    networks:
      - goodmusic-network       # maybe put in a separate network specific for recensioni
    volumes:
       - recensioni-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: recensioni_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d recensioni_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  db-connessioni:
    image: postgres:latest
    container_name: db-connessioni
    networks:
      - goodmusic-network
    volumes:
       - connessioni-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: connessioni_db
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U connessioni_user -d connessioni_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  db-recensioni-seguite:
    image: postgres:latest
    container_name: db-recensioni-seguite
    networks:
      - goodmusic-network
    volumes:
        - recensioni-seguite-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: recensioni-seguite_db
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U recensioni-seguite_user -d recensioni-seguite_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
  
  # Services
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    networks:
      - goodmusic-network
    ports:
      - "8080:8080"
    depends_on:
      - consul


  # Connessioni containers (replicati)
  connessioni-1:
    build: ./connessioni
    container_name: connessioni-1
    networks:
      - goodmusic-network
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
    labels:
      - "traefik.enable=false"  # Disabilitiamo Traefik, per evitare conflitti
    depends_on:
      - consul
    restart: always

  connessioni-2:
    build: ./connessioni
    container_name: connessioni-2
    networks:
      - goodmusic-network
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
    labels:
      - "traefik.enable=false"  # Disabilitiamo Traefik, per evitare conflitti
    depends_on:
      - consul
    restart: always

  # Recensioni containers (replicati)
  recensioni-1:
    build: ./recensioni
    container_name: recensioni-1
    networks:
      - goodmusic-network
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
    labels:
      - "traefik.enable=false"
    depends_on:
      - consul
    restart: always

  recensioni-2:
    build: ./recensioni
    container_name: recensioni-2
    networks:
      - goodmusic-network
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
    labels:
      - "traefik.enable=false"
    depends_on:
      - consul
    restart: always

  # Recensioni Seguite containers (replicati)
  recensioni-seguite-1:
    build: ./recensioni-seguite
    container_name: recensioni-seguite-1
    networks:
      - goodmusic-network
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
    labels:
      - "traefik.enable=false"
    depends_on:
      - consul
    restart: always

  recensioni-seguite-2:
    build: ./recensioni-seguite
    container_name: recensioni-seguite-2
    networks:
      - goodmusic-network
    environment:
      - CONSUL_HTTP_ADDR=consul:8500
    labels:
      - "traefik.enable=false"
    depends_on:
      - consul
    restart: always
